// This file provides basic support for building the TensorFlow demo
// in Android Studio with Gradle.
//
// Note that Bazel is still used by default to compile the native libs,
// and should be installed at the location noted below. This build file
// automates the process of calling out to it and copying the compiled
// libraries back into the appropriate directory.
//
// Alternatively, experimental support for Makefile builds is provided by
// setting buildWithMake below to true. This will allow building the demo
// on Windows machines, but note that full equivalence with the Bazel
// build is not yet guaranteed. See comments below for caveats and tips
// for speeding up the build, such as as enabling ccache.


project.buildDir = 'gradleBuild'
getProject().setBuildDir('gradleBuild')

project.ext.ASSET_DIR = projectDir.toString() + '/assets'

assert file(project.ext.ASSET_DIR + "/graph.pb").exists()
assert file(project.ext.ASSET_DIR + "/labels.txt").exists()

buildscript {
    ext.kotlin_version = '1.2.31'
    repositories {
        jcenter()
        google()

        maven {
            url 'https://maven.fabric.io/public'
            }

        maven { url "https://maven.google.com" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'com.google.gms:google-services:3.2.0'
        classpath 'io.fabric.tools:gradle:1.25.1'
       classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.realm:realm-gradle-plugin:4.1.0"



    }
}


apply plugin: 'com.android.application'


android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "org.tensorflow.demo"
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude "lib/armeabi/libbitmaps.so"
        exclude "lib/armeabi/libgifimage.so"
        exclude "lib/armeabi/libimagepipeline.so"
        exclude "lib/armeabi/libmemchunk.so"
        exclude "lib/armeabi/libwebp.so"
        exclude "lib/armeabi/libwebpimage.so"
        exclude "lib/arm64-v8a/libbitmaps.so"
        exclude "lib/arm64-v8a/libgifimage.so"
        exclude "lib/arm64-v8a/libimagepipeline.so"
        exclude "lib/arm64-v8a/libmemchunk.so"
        exclude "lib/arm64-v8a/libwebp.so"
        exclude "lib/arm64-v8a/libwebpimage.so"
        exclude "lib/x86_64/libbitmaps.so"
        exclude "lib/x86_64/libgifimage.so"
        exclude "lib/x86_64/libimagepipeline.so"
        exclude "lib/x86_64/libmemchunk.so"
        exclude "lib/x86_64/libwebp.so"
        exclude "lib/x86_64/libwebpimage.so"
    }
    sourceSets {
        main {
            // Android demo app sources.
            java {
                srcDir 'src'
            }

            manifest.srcFile 'AndroidManifest.xml'
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = [project.ext.ASSET_DIR]

            repositories {
                jcenter()

            }

            dependencies {
                compile 'org.tensorflow:tensorflow-android:1.5.0'
                compile 'com.google.firebase:firebase-core:11.8.0'
               // compile 'com.google.firebase:firebase-crash:11.8.0'
                compile 'com.google.firebase:firebase-firestore:11.8.0'
                compile 'com.google.firebase:firebase-database:11.8.0'
                compile 'com.google.firebase:firebase-storage:11.8.0'
                compile 'com.google.firebase:firebase-auth:11.8.0'
                compile 'com.google.android.gms:play-services-auth:11.8.0'
                compile 'com.google.android.gms:play-services-vision:11.8.0'
                compile 'com.android.support:appcompat-v7:26+'
                compile 'com.android.support:design:26+'
                compile 'com.android.support:recyclerview-v7:26+'
                compile 'com.android.support:cardview-v7:26+'
                compile('com.crashlytics.sdk.android:crashlytics:2.9.0@aar') {
                    transitive = true
                }

            }

        }

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}


dependencies {
    implementation 'com.android.support:appcompat-v7:26.+'
    implementation 'com.android.support.constraint:constraint-layout:+'
    implementation 'com.android.support:cardview-v7:26.1.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //compile 'com.github.Hitomis:CircleMenu:v1.0.2'
    compile 'com.nightonke:boommenu:1.0.9'
    compile 'com.cepheuen.elegant-number-button:lib:1.0.2'
    compile 'com.android.support:design:26.+'


    implementation 'com.android.support:gridlayout-v7:26.1.0'
    //    implementation project(':unitycam')
}
repositories {
    google()
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'